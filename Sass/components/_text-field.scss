@use "../abstracts" as *;

.text-field {
    --color: #{color(primary)};
    position: relative;

    & > .field {
        position: relative;

        & > span {
            user-select: none;
            z-index: 1;
            color: fontColor(600);
            position: absolute;
            left: space(medium);
            top: space(medium);
            font-size: fontSize(medium);
            font-weight: 400;
            transition: all 200ms ease-out;
        }

        &.focus:not(:focus-within) > span,
        &.active:not(:focus-within) > span {
            --color: #{fontColor(600)};
        }

        &:focus-within > span,
        &.focus > span,
        &.active > span {
            top: space(small);
            color: var(--color);
            font-size: fontSize(small);
        }

        & > input {
            outline: none;
            border: 0;
            width: 100%;
            border-radius: borderRadius(small) borderRadius(small) 0 0;
            background: color(border, light);
            font-size: fontSize(medium);
            padding: space(huge) space(medium) space(small) space(medium);

            border-bottom: 1px solid color(border, dark);
        }

        &::after {
            display: block;
            content: "";
            position: absolute;
            bottom: 0;
            width: 100%;
            height: 1px;

            transform-origin: center;
            transform: scaleX(0);
            background: var(--color);
            transition: transform 200ms ease-out;
        }
        &:focus-within::after,
        &.focus::after {
            transform: scaleX(1);
        }
    }

    & > .text {
        @include font(700, small);
        margin-top: space(small);
        padding-left: space(medium);
        height: fontSize(small);
    }

    &.error {
        & > .field > span {
            color: color(error) !important;
        }

        & > .field > input {
            border-color: color(error) !important;
        }

        & > .text {
            color: color(error);
        }

        & > .field::before {
            color: color(error) !important;
        }
    }

    &.outline {
        position: relative;

        & > .field {
            & > span {
                top: space(medium);
                background: background(primary);
                padding: 0 space(small);
            }

            &:focus-within > span,
            &.focus > span,
            &.active > span {
                top: 0;
                transform: translate(0, -50%);
            }

            & > input {
                border-radius: borderRadius(small);
                background: background(primary);
                padding: space(medium) space(regular) space(medium) space(regular);
                border: 1px solid color(border);
                transition: border-color 200ms ease-out;

                &:focus {
                    border-color: var(--color);
                }
            }

            &::after {
                all: unset;
            }
        }
    }

    &.selector {
        .field {

            &::before {
                @include pseudo-icon('arrow_drop_down');
                position: absolute;
                right: space(medium);
                top: 50%;
                font-size: $icon-big;
                color: fontColor(800);
                transform: translate(0,-50%);
                transition: 200ms color ease-out;
            }
            
            & > input {
                padding-right: space(big) + $icon-small + 10px;
            }

            
        }

        &:focus-within:not(.active) {
            .field::before {
                transform: translate(0, -50%) scaleY(-1);
                color: var(--color);
            }

            & > .options {
                visibility: visible;
                opacity: 1;
                transition: 200ms ease-out;
            }
        }

        &.active, &.focus  {
            &.outline span {
                top: 0;
                transform: translate(0, -50%);
            }

            & span {
                font-size: fontSize(small);
                top: space(small);
            }
        }

        & > .options {
            @include material-shadow(5);
            width: 100%;
            z-index: 99;
            visibility: hidden;
            opacity: 0;
            max-width: 100%;
        }
    }
}
